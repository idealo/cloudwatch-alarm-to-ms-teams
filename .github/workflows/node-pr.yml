name: 'Test PRs'
on:
  pull_request:
    paths:
      - src/**
      - package-lock.json
      - template.yaml
      - .github/workflows/node-pr.yml

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Lint the code
        run: npm run lint:json

      - name: Run unit tests
        run: npm run test:cov

      - name: Retrieve package version
        id: package-version
        run: echo "::set-output name=version::$(jq -r '.version' package.json)"

      - name: Rewrite ESLint report for SonarCloud
        run: sed -i "s+${GITHUB_WORKSPACE}+/github/workspace+g" eslint-report.json

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.6
        if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectVersion=${{ steps.package-version.outputs.version }}
  sam-test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: npm

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-14-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-14
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2
        with:
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ServerlessAppManagementAccess
          role-duration-seconds: 1800

      - name: Validate with SAM
        run: sam validate

      - name: Build with SAM
        run: sam build
